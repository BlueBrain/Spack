pipeline {
    agent {
        label 'bb5-full'
    }

    options {
        timestamps()
    }

    environment {
        DEPLOYMENT_ROOT = "/gpfs/bbp.cscs.ch/apps/hpc/test/jenkins/deployment"
        BASEDIR = "${DEPLOYMENT_ROOT}/deploy/spack/deploy"
        TMPDIR = "/dev/shm/jenkins"
    }

    stages {
        stage('Setup') {
            steps {
                dir("${DEPLOYMENT_ROOT}/deploy/spack") {
                    git(url: "https://github.com/BlueBrain/spack.git", branch: "deploy/test")
                }
                dir("${DEPLOYMENT_ROOT}/deploy/spack/etc/spack/licenses") {
                    git(url: "ssh://bbpcode.epfl.ch/user/kumbhar/spack-licenses")
                }
            }
        }

        stage('Compilers') {
            steps {
                dir("${BASEDIR}") {
                    sh "./deploy.sh compilers"
                }
            }

            post {
                always {
                    archiveArtifacts artifacts: "stacks/compilers.xml"
                    junit testResults: "stacks/compilers.xml", allowEmptyResults: true
                }
            }
        }

        stage('Tools') {
            steps {
                dir("${BASEDIR}") {
                    sh "./deploy.sh tools"
                }
            }

            post {
                always {
                    archiveArtifacts artifacts: "stacks/tools.xml"
                    junit testResults: "stacks/tools.xml", allowEmptyResults: true
                }
            }
        }

        stage('Serial Libraries') {
            steps {
                dir("${BASEDIR}") {
                    sh "./deploy.sh serial-libraries"
                }
            }

            post {
                always {
                    archiveArtifacts artifacts: "stacks/serial-libraries.xml"
                    junit testResults: "stacks/serial-libraries.xml", allowEmptyResults: true
                }
            }
        }

        stage('parallel Libraries') {
            steps {
                dir("${BASEDIR}") {
                    sh "./deploy.sh parallel-libraries"
                }
            }

            post {
                always {
                    archiveArtifacts artifacts: "stacks/parallel-libraries.xml"
                    junit testResults: "stacks/parallel-libraries.xml", allowEmptyResults: true
                }
            }
        }

        stage('Applications') {
            steps {
                dir("${BASEDIR}") {
                    sh "./deploy.sh applications"
                }
            }

            post {
                always {
                    archiveArtifacts artifacts: "stacks/applications.xml"
                    junit testResults: "stacks/applications.xml", allowEmptyResults: true
                }
            }
        }

        stage('Deployment') {
            steps {
                sh "ls"
            }
        }
    }
}
