From 1ba2b4ae7b5279791719cc398573d6ac3ca5f0e5 Mon Sep 17 00:00:00 2001
From: Pramod Kumbhar <pramod.kumbhar@epfl.ch>
Date: Fri, 20 Mar 2020 12:52:48 +0100
Subject: [PATCH] Fix issues while NMODL is built with sympy and analytical
 passes (#280)

* Fix issues while NMODL is built with sympy and analytical passes
  - set PYTHONPATH for nmodl sympy solver passes
  - make sure nmodl python module is built before compiling mod files
  - install nmodl headers to install prefix
  - enable inline pass always (--inline)
  - nrnivmodl-core inherit PYTHONPATH correctly
  - when nmodl external, make sure to INCLUDE paths
* Update nmodl submodule
---
 CMakeLists.txt                   | 2 ++
 coreneuron/CMakeLists.txt        | 8 +++++---
 external/nmodl                   | 2 +-
 extra/CMakeLists.txt             | 2 +-
 extra/nrnivmodl_core_makefile.in | 9 +++++++--
 5 files changed, 16 insertions(+), 7 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 828abe1..5f5baf7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -190,6 +190,8 @@ if(CORENRN_ENABLE_NMODL)
     include(AddNmodlSubmodule)
     set(CORENRN_NMODL_BINARY ${CMAKE_BINARY_DIR}/bin/nmodl${CMAKE_EXECUTABLE_SUFFIX})
     set(CORENRN_NMODL_INCLUDE ${CMAKE_BINARY_DIR}/include)
+    set(ENV{PYTHONPATH} "$ENV{PYTHONPATH}")
+    set(CORENRN_NMODL_PYTHONPATH $ENV{PYTHONPATH})
   endif()
   include_directories(${CORENRN_NMODL_INCLUDE})
   # set correct arguments for nmodl for cpu/gpu target
diff --git a/coreneuron/CMakeLists.txt b/coreneuron/CMakeLists.txt
index bbd1f47..ed341e9 100644
--- a/coreneuron/CMakeLists.txt
+++ b/coreneuron/CMakeLists.txt
@@ -57,7 +57,9 @@ include(NmodlHelper)
 # =============================================================================
 # Command for MOD to CPP conversion
 # =============================================================================
-set(CORENRN_NMODL_COMMAND env "MODLUNIT=${NMODL_UNITS_FILE}" "PYTHONPATH=$ENV{PYTHONPATH}" ${CORENRN_NMODL_BINARY})
+set(CORENRN_NMODL_COMMAND env "MODLUNIT=${NMODL_UNITS_FILE}"
+                              "PYTHONPATH=$ENV{PYTHONPATH}:${CMAKE_BINARY_DIR}/lib/python"
+                              ${CORENRN_NMODL_BINARY})
 
 if(${CORENRN_ENABLE_ISPC})
   set(NMODL_CODEGEN_TARGET ispc)
@@ -297,6 +299,6 @@ endif()
 install(TARGETS nrniv-core DESTINATION bin)
 install(FILES apps/coreneuron.cpp DESTINATION share/coreneuron)
 
-# install Random123
-install(DIRECTORY ${CMAKE_BINARY_DIR}/include/Random123
+# install random123 and nmodl headers
+install(DIRECTORY ${CMAKE_BINARY_DIR}/include/
         DESTINATION include)
diff --git a/external/nmodl b/external/nmodl
index 7debe70..730c4e5 160000
--- a/external/nmodl
+++ b/external/nmodl
@@ -1 +1 @@
-Subproject commit 7debe7095a0b5d082b7f42119e0be5075e576d1e
+Subproject commit 730c4e552ebe7cd64095138725e82ed5797a2ffc
diff --git a/extra/CMakeLists.txt b/extra/CMakeLists.txt
index a0f75aa..ffed3db 100644
--- a/extra/CMakeLists.txt
+++ b/extra/CMakeLists.txt
@@ -49,7 +49,7 @@ message(STATUS "CXX Compile flags from BUILD_TYPE (${_BUILD_TYPE}): ${BUILD_TYPE
 
 # nmodl options
 if(CORENRN_ENABLE_NMODL)
-  set(nmodl_arguments_c "host --c ${CORENRN_NMODL_FLAGS}")
+  set(nmodl_arguments_c "host --c passes --inline ${CORENRN_NMODL_FLAGS}")
   set(nmodl_arguments_ispc "host --ispc passes --inline ${CORENRN_NMODL_FLAGS}")
 else()
   set(nmodl_arguments_c "")
diff --git a/extra/nrnivmodl_core_makefile.in b/extra/nrnivmodl_core_makefile.in
index fba54cc..23cd76c 100644
--- a/extra/nrnivmodl_core_makefile.in
+++ b/extra/nrnivmodl_core_makefile.in
@@ -51,6 +51,11 @@ ISPC = @CMAKE_ISPC_COMPILER@
 ISPC_FLAGS = @CMAKE_ISPC_FLAGS@
 ISPC_COMPILE = $(ISPC) $(ISPC_FLAGS) -I$(incdir)
 
+ifeq (@nmodl_FOUND@, TRUE)
+INCLUDES += -I@CORENRN_NMODL_INCLUDE@
+ISPC_COMPILE += -I@CORENRN_NMODL_INCLUDE@
+endif
+
 # Variables used in the "ARTIFICIAL_CELL" detection
 mod_c_srcs_path =
 mod_ispc_srcs_path =
@@ -147,7 +152,7 @@ $(OBJS_DIR)/%.obj: $(MODC_DIR)/%.ispc | $(OBJS_DIR)
 # Build ispc files with mod2c/nmodl
 $(mod_ispc_files): $(MODC_DIR)/%.ispc: $(MODS_PATH)/%.mod | $(MODC_DIR)
 	@printf " -> $(C_GREEN)MOD2C$(C_RESET) $<\n"
-	PYTHONPATH=@CORENRN_NMODL_PYTHONPATH@ \
+	PYTHONPATH=@CORENRN_NMODL_PYTHONPATH@:${libdir}/python \
 	MODLUNIT=$(datadir_mod2c)/nrnunits.lib \
 	  $(nmodl_binary_path) $< -o $(MODC_DIR)/ @nmodl_arguments_ispc@
 
@@ -157,7 +162,7 @@ $(mod_ispc_c_files): $(MODC_DIR)/%.cpp: $(MODC_DIR)/%.ispc
 # Build cpp files with mod2c/nmodl
 $(mod_c_files): $(MODC_DIR)/%.cpp: $(MODS_PATH)/%.mod | $(MODC_DIR)
 	@printf " -> $(C_GREEN)MOD2C$(C_RESET) $<\n"
-	PYTHONPATH=@CORENRN_NMODL_PYTHONPATH@ \
+	PYTHONPATH=@CORENRN_NMODL_PYTHONPATH@:${libdir}/python \
 	MODLUNIT=$(datadir_mod2c)/nrnunits.lib \
 	  $(nmodl_binary_path) $< -o $(MODC_DIR)/ @nmodl_arguments_c@
 
-- 
2.21.0 (Apple Git-122)

